type ProcessingStatus @entity {
  id: ID!
  timestamp: DateTime!
  blockNumber: Int!
}

type TransactionDetails @entity {
  id: ID!
  chainId: Int! @index
  txHash: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  from: String! @index
  to: String! @index
  gasUsed: BigInt!
  effectiveGasPrice: BigInt!
  transactionFee: BigInt!
}

type StrategyBalance @entity {
  """
  Format: 'chainId:strategy:asset:blockNumber'
  """
  id: ID!
  chainId: Int! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  strategy: String!
  asset: String!
  symbol: String!
  balance: BigInt!
  balanceETH: BigInt!
}

type StrategyYield @entity {
  """
  Format: 'strategy:asset:blockNumber'
  """
  id: ID!
  timestamp: DateTime! @index
  blockNumber: Int! @index
  strategy: String!
  asset: String!
  balance: BigInt!
  balanceWeight: Float!
  earnings: BigInt!
  earningsChange: BigInt!
}

type StrategyDailyYield @entity {
  """
  Format: 'strategy:asset:blockNumber'
  """
  id: ID!
  timestamp: DateTime! @index
  blockNumber: Int! @index
  strategy: String!
  asset: String!
  balance: BigInt!
  balanceWeight: Float!
  earnings: BigInt!
  earningsChange: BigInt!
  apr: Float!
  apy: Float!
}

type BridgeTransfer @entity {
  id: ID! # chain + log id
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHashIn: String!
  txHashOut: String # Initially null
  messageId: String! @index
  bridge: String! @index
  transactor: String! @index
  sender: String! @index
  receiver: String! @index
  chainIn: Int! @index
  chainOut: Int!
  tokenIn: String!
  tokenOut: String!
  amountIn: BigInt!
  amountOut: BigInt!
  state: Int!
}

type BridgeTransferState @entity {
  id: ID!
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHash: String! @index
  state: Int!
}
