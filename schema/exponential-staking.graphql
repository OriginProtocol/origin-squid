# State

type ESToken @entity {
  id: ID!
  timestamp: DateTime! @index
  blockNumber: Int! @index
  circulating: BigInt!
  staked: BigInt!
  total: BigInt!
}

type ESAccount @entity {
  id: ID! # `chainId:address:account`
  chainId: Int! @index
  address: String! @index
  account: String! @index
  assetBalance: BigInt!
  stakedBalance: BigInt!
  balance: BigInt!
  votingPower: BigInt!
  delegateTo: ESAccount
  delegatesFrom: [ESAccount]! @derivedFrom(field: "delegateTo")
}

type ESYield @entity {
  id: ID!
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  assetBalance: BigInt!
  rewardsPerSecond: BigInt!
  apr: Float!
  apy: Float!
}

type ESLockup @entity  {
  id: ID! # `chainId:address:account:lockupId` or `lockupId`
  chainId: Int! @index
  address: String! @index
  account: String! @index
  lockupId: BigInt! @index
  timestamp: DateTime!
  lastUpdated: DateTime!
  amount: BigInt!
  end: BigInt!
  points: BigInt!
  withdrawAmount: BigInt!
  penalty: BigInt!
  state: ESLockupState
  events: [ESLockupEvent]! @derivedFrom(field: "lockup")
}

enum ESLockupState {
  Open
  Closed
}

enum ESLockupEventType {
  Staked
  Unstaked
  Extended
}

type ESLockupEvent @entity {
  id: ID!
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  event: ESLockupEventType!
  lockup: ESLockup!
}

# Events
type ESDelegateChanged @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  delegator: String! @index
  fromDelegate: String!
  toDelegate: String!
}

type ESDelegateVotesChanged @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  delegate: String! @index
  previousBalance: BigInt!
  newBalance: BigInt!
}

type ESPenalty @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  account: String! @index
  amount: BigInt!
}

type ESReward @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  account: String! @index
  amount: BigInt!
}

type ESStake @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  account: String! @index
  lockupId: BigInt! @index
  amount: BigInt!
  end: BigInt!
  points: BigInt!
}

type ESUnstake @entity  {
  id: ID! # `chainId:logId`
  chainId: Int! @index
  address: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  account: String! @index
  lockupId: BigInt! @index
  amount: BigInt!
  end: BigInt!
  points: BigInt!
}
