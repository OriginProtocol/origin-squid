type OGV @entity {
  id: ID!
  timestamp: DateTime! @index
  blockNumber: Int! @index
  circulating: BigInt!
  staked: BigInt!
  total: BigInt!
}

type OGVAddress @entity {
  id: ID! @index
  balance: BigInt!
  staked: BigInt!
  veogvBalance: BigInt!
  votingPower: BigInt!
  delegatee: OGVAddress
  lastUpdated: DateTime!
}

enum OGVLockupEventType {
  Staked
  Unstaked
  Extended
}

type OGVLockupTxLog @entity {
  id: ID!
  hash: String!
  event: OGVLockupEventType!
  timestamp: DateTime!
  ogvLockup: OGVLockup!
}

type OGVLockup @entity {
  id: ID!
  lockupId: String! @index
  address: OGVAddress! @index
  logs: [OGVLockupTxLog]! @derivedFrom(field: "ogvLockup")
  amount: BigInt!
  end: DateTime!
  veogv: BigInt! # Amount of veOGV received
  timestamp: DateTime!
  # active: Boolean
}

enum OGVProposalState {
  Pending
  Active
  Canceled
  Defeated
  Succeeded
  Queued
  Expired
  Executed
}

enum OGVProposalEvent {
  Created
  Queued
  Canceled
  Extended
  Executed
}

enum OGVVoteType {
  Against
  For
  Abstain
}

type OGVProposalTxLog @entity {
  id: ID!
  hash: String!
  event: OGVProposalEvent!
  timestamp: DateTime!
  proposal: OGVProposal! @index
}

type OGVProposal @entity {
  id: ID! @index
  description: String
  proposer: OGVAddress!
  timestamp: DateTime!
  startBlock: BigInt!
  endBlock: BigInt!
  lastUpdated: DateTime!
  status: OGVProposalState!
  logs: [OGVProposalTxLog]! @derivedFrom(field: "proposal")
  quorum: BigInt!
  choices: [String]!
  scores: [Float]!
}

type OGVProposalVote @entity {
  id: ID!
  proposal: OGVProposal! @index
  voter: OGVAddress! @index
  weight: BigInt!
  type: OGVVoteType!
  txHash: String!
  timestamp: DateTime!
}

type OGVDailyStat @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index

  totalSupply: BigInt!
  totalSupplyUSD: Float!
  totalStaked: BigInt!
  tradingVolumeUSD: Float!
  marketCapUSD: Float!
  priceUSD: Float!
  holdersOverThreshold: Int!
}