type OToken @entity {
  id: ID! @index
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  totalSupply: BigInt!
  rebasingSupply: BigInt!
  nonRebasingSupply: BigInt!
  holderCount: Int!
}

type OTokenAsset @entity {
  id: ID! @index
  chainId: Int! @index
  otoken: String! @index
  address: String! @index
  symbol: String!
}

type OTokenAddress @entity {
  id: ID! @index
  chainId: Int! @index
  otoken: String! @index
  address: String! @index
  isContract: Boolean!
  rebasingOption: RebasingOption!
  balance: BigInt!
  earned: BigInt!
  credits: BigInt!
  delegatedTo: String
  blockNumber: Int!
  lastUpdated: DateTime!
  history: [OTokenHistory!]! @derivedFrom(field: "address")
}

type OTokenHistory @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  address: OTokenAddress! @index
  value: BigInt!
  balance: BigInt!
  timestamp: DateTime!
  blockNumber: Int! @index
  txHash: String! @index
  type: HistoryType!
}

type OTokenRebase @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHash: String! @index
  totalSupply: BigInt!
  rebasingCredits: BigInt!
  rebasingCreditsPerToken: BigInt!
  apy: OTokenAPY!
  fee: BigInt!
  feeETH: BigInt!
  feeUSD: BigInt!
  yield: BigInt!
  yieldETH: BigInt!
  yieldUSD: BigInt!
}

type OTokenRebaseOption @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHash: String! @index
  address: OTokenAddress!
  status: RebasingOption!
  delegatedTo: String
}

type OTokenAPY @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHash: String! @index
  date: String! @index
  apr: Float!
  apy: Float!
  apy7DayAvg: Float!
  apy14DayAvg: Float!
  apy30DayAvg: Float!
  rebasingCreditsPerToken: BigInt!
}

type OTokenVault @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  address: String! @index
  vaultBuffer: BigInt!
  totalValue: BigInt!
}

type OTokenActivity @entity {
  id: ID!
  chainId: Int! @index
  otoken: String! @index
  timestamp: DateTime! @index
  blockNumber: Int! @index
  txHash: String! @index
  type: OTokenActivityType
  data: JSON
}

enum OTokenActivityType {
  Approval
  Bridge
  ClaimRewards
  DelegateVote
  ExtendStake
  Migrate
  Stake
  Transfer
  Swap
  Wrap
  Unwrap
  Mint
  Redeem
  Zap
  Unstake
  Vote
}

type OTokenDailyStat @entity {
  id: ID! # chain-otokenAddress-YYYY-MM-DD
  chainId: Int! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  otoken: String! @index
  date: String! @index

  apr: Float!
  apy: Float!
  apy7: Float!
  apy14: Float!
  apy30: Float!

  rateUSD: BigInt!
  rateETH: BigInt!

  totalSupply: BigInt!
  rebasingSupply: BigInt!
  nonRebasingSupply: BigInt!
  wrappedSupply: BigInt!

  amoSupply: BigInt
  dripperWETH: BigInt!

  yield: BigInt!
  fees: BigInt!
  cumulativeYield: BigInt!
  cumulativeFees: BigInt!

  marketCapUSD: Float!
  accountsOverThreshold: Int!
}

type OTokenDripperState @entity {
  id: ID! # chain-otokenAddress-blockNumber
  chainId: Int! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  otoken: String! @index
  wethBalance: BigInt!
  availableFunds: BigInt!
  lastCollect: BigInt!
  perSecond: BigInt!
  dripDuration: BigInt!
}

type OTokenHarvesterYieldSent @entity {
  id: ID! # log.id
  chainId: Int! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  otoken: String! @index
  txHash: String!
  yield: BigInt!
  fee: BigInt!
}

type OTokenRewardTokenCollected @entity {
  id: ID!
  chainId: Int! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  otoken: String! @index
  strategy: String!
  recipient: String!
  rewardToken: String!
  amount: BigInt!
}

type OTokenWithdrawalRequest @entity {
  id: ID!
  chainId: Int! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  otoken: String! @index
  requestId: BigInt!
  withdrawer: String!
  amount: BigInt!
  queued: BigInt!
  claimed: Boolean!
  txHash: String! @index
}

enum RebasingOption {
  OptIn
  OptOut
  YieldDelegationSource
  YieldDelegationTarget
}

enum HistoryType {
  Sent
  Received
  Yield
}
