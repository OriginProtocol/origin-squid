enum GovernanceProposalState {
  Pending
  Active
  Canceled
  Defeated
  Succeeded
  Queued
  Expired
  Executed
}

enum GovernanceProposalEventType {
  Created
  Queued
  Canceled
  Extended
  Executed
}

enum GovernanceVoteType {
  Against
  For
  Abstain
}

type GovernanceProposalEvent @entity {
  id: ID!
  txHash: String! @index
  event: GovernanceProposalEventType!
  timestamp: DateTime!
  proposal: GovernanceProposal! @index
}

type GovernanceProposal @entity {
  id: ID! @index
  chainId: Int! @index
  address: String! @index
  proposalId: BigInt!
  description: String
  proposer: String!
  timestamp: DateTime!
  txHash: String! @index
  startBlock: BigInt!
  endBlock: BigInt!
  targets: [String]!
  values: [String]!
  signatures: [String]!
  calldatas: [String]!
  lastUpdated: DateTime!
  status: GovernanceProposalState!
  events: [GovernanceProposalEvent]! @derivedFrom(field: "proposal")
  quorum: BigInt!
  choices: [String]!
  scores: [String]!
}

type GovernanceProposalVote @entity {
  id: ID!
  chainId: Int!
  address: String!
  proposal: GovernanceProposal! @index
  voter: String! @index
  weight: BigInt!
  type: GovernanceVoteType!
  txHash: String!
  timestamp: DateTime!
}